import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v13-appRouter'
import "./globals.css";
import { Container, CssBaseline, ThemeProvider } from "@mui/material";
import darkTheme from "../constants/dark.theme";
import Header from "@/components/header/Header";
import { AuthProvider } from "@/context/AuthContext";
import checkIsAuthenticated from "@/util/authenticated";
import logoutUser from "@/actions/logout-user";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const isAuthenticated = await checkIsAuthenticated()
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppRouterCacheProvider>
          <ThemeProvider theme={darkTheme}>
            <AuthProvider isAuthenticated={isAuthenticated}>
              <CssBaseline />
              <Header logout={logoutUser} />
              <Container>
                {children}
              </Container>
            </AuthProvider>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
